version: 2.1

orbs:
  diag:
    description: "If you're running this bad things happened"
    commands:
      report:
        description: "Save information about the job enviroment as artifacts to inspect later"
        parameters:
          data-dir:
            type: string
            default: "~/.ccidiag"
        steps:
          - run: 
              name: CircleCI Diag Report
              # This will run through various commands dumping their output as a file to be uploaded as 
              # an artifact. If the command doesn't exist the file will be empty, and CircleCI will ignore
              # it during the upload. Can be used to discover enviromental information and installed packages
              command: |
                mkdir << parameters.data-dir >> || true
                cat /proc/cpuinfo > << parameters.data-dir >>/proc_cpuinfo.log || true
                dpkg -l > << parameters.data-dir >>/dpkg.log || true
                yarn list > << parameters.data-dir >>/yarn.log || true
                brew list --versions > << parameters.data-dir >>/brew.log || true
                yarn global list > << parameters.data-dir >>/yarn-global.log || true
                gem query --local > << parameters.data-dir >>/gem.log || true
                npm --version || true
                npm ls --global > << parameters.data-dir >>/npm-global.log || true
                npm ls > << parameters.data-dir >>/npm.log || true
          - store_artifacts:
                path: << parameters.data-dir >>
                destination: ccidiag
        start:
          steps:
            - run: echo "diag start"
        end:
          steps:
            - run: echo "diag end"
executors:
  default:
    docker:
      - image: circleci/python

jobs:
  test-report:
    executor: default
    steps:
      - diag/report

workflows:
  orb-flow:
    jobs:
      - test-report:
          pre-steps:
            - diag/start
          post-steps:
            - diag/end